apiVersion: 1
datasources:
  - name: Mimir
    type: prometheus
    uid: mimir
    access: proxy
    url: http://__MIMIR_ENDPOINT__/prometheus
    isDefault: true
    editable: true
    jsonData:
      httpMethod: POST
      timeInterval: 5s
      defaultEditor: code
      manageAlerts: true
      alertmanagerUid: mimir
      prometheusType: Mimir
      prometheusVersion: 2.52.0
      cacheLevel: 'High'
      incrementalQuerying: true
      incrementalQueryOverlapWindow: 10m
      queryTimeout: 60s
      defaultRegion: default

  - name: Loki
    type: loki
    uid: loki
    access: proxy
    url: http://__LOKI_ENDPOINT__
    editable: true
    jsonData:
      maxLines: 1000
      derivedFields:
        - name: "traceID"
          matcherRegex: "traceID=(\\w+)"
          url: "$${__value.raw}"
          datasourceUid: tempo

  - name: Tempo
    type: tempo
    uid: tempo
    access: proxy
    url: http://__TEMPO_ENDPOINT__
    editable: true
    jsonData:
      httpMethod: GET
      tracesToLogsV2:
        datasourceUid: loki
        spanStartTimeShift: -1h
        spanEndTimeShift: 1h
        tags:
          - key: service.name
            value: service_name
        filterByTraceID: false
        filterBySpanID: false
        customQuery: true
        query: 'method="$${__span.tags.method}"'
      tracesToMetrics:
        datasourceUid: mimir
        spanStartTimeShift: -1h
        spanEndTimeShift: 1h
        tags:
          - key: service.name
            value: service_name
        queries:
          - name: Sample query
            query: 'sum(rate(http_requests_total{$$__tags}[5m]))'
      serviceMap:
        datasourceUid: mimir
      nodeGraph:
        enabled: true
      search:
        hide: false

  - name: Pyroscope
    type: pyroscope
    uid: pyroscope
    access: proxy
    url: http://__PYROSCOPE_ENDPOINT__
    editable: true
    jsonData:
      minStep: '15s'
