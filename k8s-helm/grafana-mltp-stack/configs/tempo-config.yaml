# Tempo Configuration for MLTP Stack
# Distributed tracing configuration

# Enables result streaming from Tempo (to Grafana) via HTTP.
stream_over_http_enabled: true

# Configure the server block.
server:
  # Listen for all incoming requests on port 3200.
  http_listen_port: 3200

# The distributor receives incoming trace span data for the system.
distributor:
  receivers:
    jaeger:
      protocols:
        thrift_http:
        grpc:
        thrift_binary:
        thrift_compact:
    otlp:
      protocols:
        http:
          endpoint: "0.0.0.0:4318"
        grpc:
          endpoint: "0.0.0.0:4317"
    zipkin:

# The ingester receives data from the distributor and processes it into indices and blocks.
ingester:
  trace_idle_period: 10s
  max_block_bytes: 1_000_000
  max_block_duration: 5m

# The compactor block configures the compactor responsible for compacting TSDB blocks.
compactor:
  compaction:
    compaction_window: 1h
    max_block_bytes: 100_000_000
    block_retention: 1h
    compacted_block_retention: 10m

# Configuration block to determine where to store TSDB blocks.
storage:
  trace:
    backend: local
    block:
      bloom_filter_false_positive: .05
    wal:
      path: /var/tempo/wal
    local:
      path: /var/tempo/blocks
    pool:
      max_workers: 100
      queue_depth: 10000

# Configures the metrics generator component of Tempo.
metrics_generator:
  processor:
    span_metrics:
      dimensions:
        - http.method
        - http.target
        - http.status_code
        - service.version
    service_graphs:
      dimensions:
        - http.method
        - http.target
        - http.status_code
        - service.version
    local_blocks:
      flush_to_storage: true
  registry:
    collection_interval: 5s
    external_labels:
      source: tempo
      group: 'mythical'
  storage:
    path: /var/tempo/generator/wal
    remote_write:
      - url: http://{{ include "grafana-mltp-stack.fullname" . }}-mimir:9009/api/v1/push
        send_exemplars: true
  traces_storage:
    path: /var/tempo/generator/traces

# Global override configuration.
overrides:
  defaults:
    metrics_generator:
      processors: [service-graphs, span-metrics, local-blocks]
      generate_native_histograms: both
