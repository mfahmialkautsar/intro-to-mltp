{{- if .Values.observability.tempo.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "grafana-mltp-stack.fullname" . }}-tempo
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  labels:
    {{- include "grafana-mltp-stack.labels" . | nindent 4 }}
    {{- include "grafana-mltp-stack.componentLabels" "tempo" | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "grafana-mltp-stack.fullname" . }}-tempo
  # Pod management policy for StatefulSet
  podManagementPolicy: OrderedReady
  # Update strategy for StatefulSet
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "grafana-mltp-stack.componentSelectorLabels" (list . "tempo") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "grafana-mltp-stack.labels" . | nindent 8 }}
        {{- include "grafana-mltp-stack.componentLabels" "tempo" | nindent 8 }}
    spec:
      {{- include "grafana-mltp-stack.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "grafana-mltp-stack.serviceAccountName" . }}
      {{- include "grafana-mltp-stack.podSecurityContext" . | nindent 6 }}
      containers:
        - name: tempo
          {{- include "grafana-mltp-stack.securityContext" . | nindent 10 }}
          image: "{{ .Values.observability.tempo.image.repository }}:{{ .Values.observability.tempo.image.tag }}"
          imagePullPolicy: {{ .Values.observability.tempo.image.pullPolicy }}
          args:
            - -config.file=/etc/tempo.yaml
          ports:
            - name: http
              containerPort: {{ .Values.observability.tempo.ports.http }}
              protocol: TCP
            - name: zipkin
              containerPort: {{ .Values.observability.tempo.ports.zipkin }}
              protocol: TCP
            - name: otlp-grpc
              containerPort: {{ .Values.observability.tempo.ports.otlp_grpc }}
              protocol: TCP
            - name: otlp-http
              containerPort: {{ .Values.observability.tempo.ports.otlp_http }}
              protocol: TCP
            - name: jaeger
              containerPort: {{ .Values.observability.tempo.ports.jaeger }}
              protocol: TCP
          volumeMounts:
            {{- if .Values.development.localConfigs.enabled }}
            - name: config-volume
              mountPath: /etc/tempo.yaml
              subPath: {{ base .Values.development.localConfigs.tempo.configPath }}
              readOnly: true
            {{- else }}
            - name: config
              mountPath: /etc/tempo.yaml
              subPath: tempo.yaml
            {{- end }}
            - name: tempo-data
              mountPath: /var/tempo
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.observability.tempo.resources | nindent 12 }}
      volumes:
        {{- if .Values.development.localConfigs.enabled }}
        - name: config-volume
          hostPath:
            path: {{ .Values.development.localConfigs.basePath }}/{{ .Values.development.localConfigs.tempo.configPath }}
            type: File
        {{- else }}
        - name: config
          configMap:
            name: {{ include "grafana-mltp-stack.fullname" . }}-tempo-config
        {{- end }}
        - name: tempo-data
          emptyDir: {}
      {{- include "grafana-mltp-stack.nodeSelector" . | nindent 6 }}
      {{- include "grafana-mltp-stack.affinity" . | nindent 6 }}
      {{- include "grafana-mltp-stack.tolerations" . | nindent 6 }}
  volumeClaimTemplates:
    - metadata:
        name: tempo-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- if .Values.global.storageClass }}
        storageClassName: {{ .Values.global.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.observability.tempo.persistence.size | default "1Gi" }}
{{- end }}
