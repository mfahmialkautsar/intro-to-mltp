{{- if .Values.k6.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "grafana-mltp-stack.fullname" . }}-k6-loadtest
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "grafana-mltp-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: k6-loadtest
spec:
  ttlSecondsAfterFinished: 86400  # Clean up after 24 hours
  template:
    metadata:
      labels:
        {{- include "grafana-mltp-stack.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: k6-loadtest
    spec:
      serviceAccountName: {{ include "grafana-mltp-stack.serviceAccountName" . }}
      restartPolicy: Never
      initContainers:
        - name: wait-for-server
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              until nc -z {{ include "grafana-mltp-stack.fullname" . }}-mythical-server.{{ .Values.global.namespace }}.svc.cluster.local {{ .Values.microservices.server.ports.http }}; do
                echo "Waiting for mythical-server to be ready..."
                sleep 5
              done
              echo "Mythical server is ready!"
        - name: wait-for-mimir
          image: busybox:1.35
          command: ['sh', '-c']
          args:
            - |
              until nc -z {{ include "grafana-mltp-stack.fullname" . }}-mimir.{{ .Values.global.namespace }}.svc.cluster.local 9009; do
                echo "Waiting for Mimir to be ready..."
                sleep 5
              done
              echo "Mimir is ready!"
      containers:
        - name: k6
          image: "{{ .Values.k6.image.repository }}:{{ .Values.k6.image.tag }}"
          imagePullPolicy: {{ .Values.k6.image.pullPolicy }}
          command: ["k6", "run"]
          args:
            - "--out"
            - "experimental-prometheus-rw"
            - "--duration"
            - "$(K6_DURATION)"
            - "--vus"
            - "$(K6_VUS)"
            - "/scripts/mythical-loadtest.js"
          envFrom:
            # Load environment variables from ConfigMap
            - configMapRef:
                name: {{ include "grafana-mltp-stack.fullname" . }}-k6-env
          resources:
            {{- toYaml .Values.k6.resources | nindent 12 }}
          volumeMounts:
            - name: k6-script
              mountPath: /scripts
              readOnly: true
      volumes:
        - name: k6-script
          configMap:
            name: {{ include "grafana-mltp-stack.fullname" . }}-k6-script
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
