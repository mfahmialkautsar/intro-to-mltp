{{- if .Values.microservices.enabled }}
{{- if .Values.microservices.server.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "grafana-mltp-stack.fullname" . }}-mythical-server
  namespace: {{ .Values.global.namespace | default .Release.Namespace }}
  labels:
    {{- include "grafana-mltp-stack.labels" . | nindent 4 }}
    {{- include "grafana-mltp-stack.componentLabels" "mythical-server" | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "grafana-mltp-stack.componentSelectorLabels" (list . "mythical-server") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "grafana-mltp-stack.labels" . | nindent 8 }}
        {{- include "grafana-mltp-stack.componentLabels" "mythical-server" | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4000"
    spec:
      {{- include "grafana-mltp-stack.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "grafana-mltp-stack.serviceAccountName" . }}
      {{- include "grafana-mltp-stack.podSecurityContext" . | nindent 6 }}
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z {{ include "grafana-mltp-stack.fullname" . }}-postgresql 5432; do echo waiting for postgres; sleep 2; done;']
        - name: wait-for-alloy
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z {{ include "grafana-mltp-stack.fullname" . }}-alloy 4317; do echo waiting for alloy; sleep 2; done;']
      containers:
        - name: mythical-server
          {{- include "grafana-mltp-stack.securityContext" . | nindent 10 }}
          image: "{{ .Values.microservices.server.image.repository }}:{{ .Values.microservices.server.image.tag }}"
          imagePullPolicy: {{ .Values.microservices.server.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.microservices.server.ports.http }}
              protocol: TCP
            - name: alt
              containerPort: {{ .Values.microservices.server.ports.alt }}
              protocol: TCP
          envFrom:
            # Load non-sensitive environment variables from ConfigMap
            - configMapRef:
                name: {{ include "grafana-mltp-stack.fullname" . }}-microservices-env
            # Load sensitive environment variables from Secret
            - secretRef:
                name: {{ include "grafana-mltp-stack.fullname" . }}-postgresql-secret
          env:
            # Special environment variables that need dynamic values
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "ip=$(POD_IP)"
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.microservices.server.resources | nindent 12 }}
      {{- include "grafana-mltp-stack.nodeSelector" . | nindent 6 }}
      {{- include "grafana-mltp-stack.affinity" . | nindent 6 }}
      {{- include "grafana-mltp-stack.tolerations" . | nindent 6 }}
{{- end }}
{{- end }}
